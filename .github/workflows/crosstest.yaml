name: crosstest
on:
  schedule:
    - cron: 10 15 * * * # Runs 00:10 UTC, 20:10 Eastern
  workflow_dispatch: # support manual runs
    inputs:
      test_connect_go_branch:
        description: 'Target connect-go branch to test (cannot include "/")'
        required: false
        default: 'main'
      test_protobuf_es_branch:
        description: 'Target protobuf-es branch to test'
        required: false
        default: 'main'
      test_connect_web_branch:
        description: 'Target connect-web branch to test'
        required: false
        default: 'main'
      disable_open_issue:
        description: 'Disable open issue on fail'
        type: boolean
        required: false
        default: false
permissions:
  contents: read
  issues: write
jobs:
  connect-go-crosstest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.18.1'
      - name: Setup Docker Buildx # Docker Buildkit required for docker-compose
        uses: docker/setup-buildx-action@v2
        with:
          driver: docker
          install: true
      # TODO: Remove when connect-web is public.
      - name: Configure Private Repo Access
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: |
            ${{ secrets.CONNECT_WEB_DEPLOY_KEY }}
      - name: Cache
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-connect-crosstest-ci-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-connect-crosstest-ci-
        run: |
          echo "TEST_CONNECT_GO_BRANCH=${{ github.event.inputs.test_connect_go_branch || main }}" >> $GITHUB_ENV
          echo "TEST_PROTOBUF_ES_BRANCH=${{ github.event.inputs.test_protobuf_es_branch || main }}" >> $GITHUB_ENV
          echo "TEST_CONNECT_WEB_BRANCH=${{ github.event.inputs.test_connect_web_branch || main }}" >> $GITHUB_ENV
          echo "DISABLE_OPEN_ISSUE=${{ github.event.inputs.disable_open_issue || false }}" >> $GITHUB_ENV
      - name: Test With Latest Commit
        run: make dockercomposetest # Make target includes clean-up
        env:
          DOCKER_BUILDKIT: 1
          COMPOSE_DOCKER_CLI_BUILD: 1
          # TODO: Remove when connect-web is public.
          NPM_TOKEN: ${{ secrets.NPM_RO_TOKEN }}
      - name: Open Issue on Fail
        uses: dblock/create-a-github-issue@v3
        if: ${{ failure() && env.DISABLE_OPEN_ISSUE != 'true' }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          filename: .github/crosstest-issue-template.md
          update_existing: true
          search_existing: open
